package routines;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class BusinessRules {
    
	
	public static boolean isNotNull(Object arg){
	    boolean isNotNull = (arg != null && !arg.equals("null")) ;
	    if (isNotNull)
	        isNotNull &= (arg.toString().trim().length() != 0);
	    return isNotNull;
	}
	
	public static boolean isNumeric(String arg){
	    
		boolean valid = true;
		valid = isNotNull(arg);
	    
	    try {
	        double d = Double.parseDouble(arg);
	    
	    }catch (NumberFormatException nfe) {
	        return false;
	    }
	    
	    return valid;
	    
	}
	
	public static boolean isDate(String dateStr) {
        DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        sdf.setLenient(false);
        
        try {
            sdf.parse(dateStr);
        
        } catch (ParseException e) {
            return false;
        
        }
        return true;
    }
	
	public static boolean is2DateValid(String date1, String date2) {
        
		boolean date1_null = isNotNull(date1);
		boolean date2_null = isNotNull(date2);
		boolean date1_Format = isDate(date1);
		boolean date2_Format = isDate(date2);
        
		if(date1_null && date2_null && date1_Format && date2_Format) {
        	return true;
        
		} else {
        	return false;
        }

    }
	
	public static boolean isCCRCompleteAndValid(String date1, String date2, String date3) {
        
		boolean date1_null = isNotNull(date1);
		boolean date2_null = isNotNull(date2);
		boolean date3_null = isNotNull(date3);
		boolean date1_Format = isDate(date1);
		boolean date2_Format = isDate(date2);
		boolean date3_Format = isDate(date3);
        
		if(date1_null && date2_null && date3_null && date1_Format && date2_Format && date3_Format) {
        	return true;
        
		} else {
        	return false;
        }

    }
	
	public static int CCR_DAYS_BR(String dcomp, String proj_charges_settled, String app_ready_con) {
		Date proj_charges_settled_date = TalendDate.parseDate("yyyy-MM-dd", proj_charges_settled);
		Date app_ready_con_date = TalendDate.parseDate("yyyy-MM-dd", app_ready_con);
		Date dcomp_date = TalendDate.parseDate("yyyy-MM-dd", dcomp);
		Date max = (int)TalendDate.diffDate(proj_charges_settled_date, app_ready_con_date, "dd") >= 0 ? proj_charges_settled_date:app_ready_con_date;
		return (int)TalendDate.diffDateFloor(dcomp_date, max, "dd");
	}
	
	public static int APT_WORA_DAYS_BR(String proj_charges_settled, String app_ready_con, String authzd) {
		Date proj_charges_settled_date = TalendDate.parseDate("yyyy-MM-dd", proj_charges_settled);
		Date app_ready_con_date = TalendDate.parseDate("yyyy-MM-dd", app_ready_con);
		Date authzd_date = TalendDate.parseDate("yyyy-MM-dd", authzd);
		Date max = (int)TalendDate.diffDate(proj_charges_settled_date, app_ready_con_date, "dd") >= 0 ? proj_charges_settled_date:app_ready_con_date;
		return (int)TalendDate.diffDateFloor(max, authzd_date, "dd");
	}
	
	public static Date parseDate(String date) {
		return routines.BusinessRules.isDate(date)?TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",date):TalendDate.getCurrentDate();
	}
}
